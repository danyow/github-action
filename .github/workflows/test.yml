name: 输入运行参数
on:
  push:
    branches:
      - main
    paths:
      - "Assets/**"
      - "Packages/**"
      - "ProjectSettings/**"
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      releaseMode:
        description: '工作流模式 [release, debug]'
        type: choice
        options:
          - debug
          - release
          - published
        required: false
        default: 'debug'
      linuxTargetPlatforms:
        description: '[Android, iOS, StandaloneOSX, StandaloneLinux64, WebGL]'
        type: string
        required: false
        default: ''
      windowTargetPlatforms:
        description: '[StandaloneWindows, WSAPlayer]'
        type: string
        required: false
        default: ''
      win64TargetPlatforms:
        description: '[StandaloneWindows64]'
        type: string
        required: false
        default: ''
jobs:
  
  set_default_options:
    name: 设置默认值
    runs-on: ubuntu-latest
    env:
      releaseMode: ${{ github.event.inputs.releaseMode }}
      linuxTargetPlatforms: ${{ github.event.inputs.linuxTargetPlatforms }}
      windowTargetPlatforms: ${{ github.event.inputs.windowTargetPlatforms }}
      win64TargetPlatforms: ${{ github.event.inputs.win64TargetPlatforms }}
    steps:
      -
        name: 发布模式设定默认值
        if: github.event.action == 'published' || github.event.inputs.releaseMode == 'published'
        run: |
          echo "releaseMode='published'" >> $GITHUB_ENV
          echo "linuxTargetPlatforms='Android, iOS, StandaloneOSX, StandaloneLinux64, WebGL'" >> $GITHUB_ENV
          echo "windowTargetPlatforms='StandaloneWindows, WSAPlayer'" >> $GITHUB_ENV
          echo "win64TargetPlatforms='StandaloneWindows64'" >> $GITHUB_ENV
      -
        name: 非发布模式设定默认值
        if: github.event.action != 'published' && github.event.inputs.releaseMode != 'published'
        run: |
          if [ "$releaseMode" = "" ]; then
            echo "releaseMode='debug'" >> $GITHUB_ENV
          fi
          if [ "$linuxTargetPlatforms" = "" ]; then
            echo "linuxTargetPlatforms='WebGL'" >> $GITHUB_ENV
          fi
      -
        name: linuxTargetPlatforms 转换为数组
        uses: jungwinter/split@v2
        id: linuxTargetPlatforms
        with:
          msg: ${{ env.linuxTargetPlatforms }}
          separator: ', '
      -
        name: windowTargetPlatforms 转换为数组
        uses: jungwinter/split@v2
        id: windowTargetPlatforms
        with:
          msg: ${{ env.windowTargetPlatforms }}
          separator: ', '
      -
        name: win64TargetPlatforms 转换为数组
        uses: jungwinter/split@v2
        id: win64TargetPlatforms
        with:
          msg: ${{ env.win64TargetPlatforms }}
          separator: ', '
      -
        name: 打印
        env:
          log_linuxTargetPlatforms: ${{ toJSON(steps.linuxTargetPlatforms.outputs) }}
          log_windowTargetPlatforms: ${{ toJSON(steps.windowTargetPlatforms.outputs) }}
          log_win64TargetPlatforms: ${{ toJSON(steps.win64TargetPlatforms.outputs) }}
        run: |
          echo $log_linuxTargetPlatforms
          echo $log_windowTargetPlatforms
          echo $log_win64TargetPlatforms 
